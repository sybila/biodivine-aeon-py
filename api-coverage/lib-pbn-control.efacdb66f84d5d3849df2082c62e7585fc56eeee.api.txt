pub mod biodivine_pbn_control
pub mod biodivine_pbn_control::aeon
pub mod biodivine_pbn_control::aeon::attractors
pub fn biodivine_pbn_control::aeon::attractors::compute(graph: &biodivine_lib_param_bn::symbolic_async_graph::SymbolicAsyncGraph, verbose: bool) -> alloc::vec::Vec<biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices>
pub mod biodivine_pbn_control::aeon::config
pub mod biodivine_pbn_control::aeon::phentoype
pub fn biodivine_pbn_control::aeon::phentoype::build_phenotype(graph: &biodivine_lib_param_bn::symbolic_async_graph::SymbolicAsyncGraph, phenotype: std::collections::hash::map::HashMap<&str, bool>) -> biodivine_lib_param_bn::symbolic_async_graph::GraphVertices
pub fn biodivine_pbn_control::aeon::phentoype::resolve_var_id(graph: &biodivine_lib_param_bn::symbolic_async_graph::SymbolicAsyncGraph, var: &str) -> core::option::Option<biodivine_lib_param_bn::VariableId>
pub mod biodivine_pbn_control::aeon::reachability
pub fn biodivine_pbn_control::aeon::reachability::backward(graph: &biodivine_lib_param_bn::symbolic_async_graph::SymbolicAsyncGraph, initial: &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices, verbose: bool) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::aeon::reachability::backward_closed_subset(graph: &biodivine_lib_param_bn::symbolic_async_graph::SymbolicAsyncGraph, set: &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::aeon::reachability::backward_within(graph: &biodivine_lib_param_bn::symbolic_async_graph::SymbolicAsyncGraph, initial: &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices, bounds: &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices, verbose: bool) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::aeon::reachability::forward(graph: &biodivine_lib_param_bn::symbolic_async_graph::SymbolicAsyncGraph, initial: &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices, verbose: bool) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::aeon::reachability::forward_closed(graph: &biodivine_lib_param_bn::symbolic_async_graph::SymbolicAsyncGraph, initial: &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices, verbose: bool) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::aeon::reachability::forward_closed_subset(graph: &biodivine_lib_param_bn::symbolic_async_graph::SymbolicAsyncGraph, set: &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::aeon::reachability::forward_closed_within(graph: &biodivine_lib_param_bn::symbolic_async_graph::SymbolicAsyncGraph, initial: &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices, bounds: &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices, verbose: bool) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::aeon::reachability::forward_within(graph: &biodivine_lib_param_bn::symbolic_async_graph::SymbolicAsyncGraph, initial: &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices, bounds: &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices, verbose: bool) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub mod biodivine_pbn_control::control
pub mod biodivine_pbn_control::control::_impl_attractor_control_map
pub mod biodivine_pbn_control::control::_impl_one_step_control
pub mod biodivine_pbn_control::control::_impl_permanent_control
pub mod biodivine_pbn_control::control::_impl_phenotype_control_map
pub mod biodivine_pbn_control::control::_impl_phenotype_permanent_control
pub mod biodivine_pbn_control::control::_impl_temporary_control
pub mod biodivine_pbn_control::control::_symbolic_utils
pub fn biodivine_pbn_control::control::_symbolic_utils::mk_bdd_of_bound(ctx: &biodivine_lib_bdd::BddVariableSet, variables: &[biodivine_lib_bdd::BddVariable], bound: usize) -> biodivine_lib_bdd::Bdd
pub fn biodivine_pbn_control::control::_symbolic_utils::mk_bdd_up_to_bound(ctx: &biodivine_lib_bdd::BddVariableSet, variables: &[biodivine_lib_bdd::BddVariable], bound: usize) -> biodivine_lib_bdd::Bdd
pub enum biodivine_pbn_control::control::PhenotypeOscillationType
pub biodivine_pbn_control::control::PhenotypeOscillationType::Allowed
pub biodivine_pbn_control::control::PhenotypeOscillationType::Forbidden
pub biodivine_pbn_control::control::PhenotypeOscillationType::Required
pub struct biodivine_pbn_control::control::AttractorControlMap
impl biodivine_pbn_control::control::AttractorControlMap
pub fn biodivine_pbn_control::control::AttractorControlMap::as_bdd(&self) -> &biodivine_lib_bdd::Bdd
pub fn biodivine_pbn_control::control::AttractorControlMap::as_colored_vertices(&self) -> &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::control::AttractorControlMap::controllable_colors_cardinality(&self) -> f64
pub fn biodivine_pbn_control::control::AttractorControlMap::exclude_perturbation(&mut self, variable: biodivine_lib_param_bn::VariableId, value: core::option::Option<&bool>)
pub fn biodivine_pbn_control::control::AttractorControlMap::jump_vertices(&self) -> f64
pub fn biodivine_pbn_control::control::AttractorControlMap::require_perturbation(&mut self, variable: biodivine_lib_param_bn::VariableId, value: core::option::Option<&bool>)
impl biodivine_pbn_control::control::ControlMap for biodivine_pbn_control::control::AttractorControlMap
pub fn biodivine_pbn_control::control::AttractorControlMap::as_bdd(&self) -> &biodivine_lib_bdd::Bdd
pub fn biodivine_pbn_control::control::AttractorControlMap::as_colored_vertices(&self) -> &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::control::AttractorControlMap::new(context: biodivine_pbn_control::perturbation::PerturbationGraph, perturbation_set: biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices) -> Self
pub fn biodivine_pbn_control::control::AttractorControlMap::perturbation_working_colors(&self, perturbation: &std::collections::hash::map::HashMap<alloc::string::String, bool>) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColors
pub fn biodivine_pbn_control::control::AttractorControlMap::working_perturbations(&self, min_robustness: f64, _verbose: bool, return_all: bool) -> alloc::vec::Vec<(std::collections::hash::map::HashMap<alloc::string::String, bool>, biodivine_lib_param_bn::symbolic_async_graph::GraphColors)>
pub struct biodivine_pbn_control::control::PhenotypeControlMap
impl biodivine_pbn_control::control::ControlMap for biodivine_pbn_control::control::PhenotypeControlMap
pub fn biodivine_pbn_control::control::PhenotypeControlMap::as_bdd(&self) -> &biodivine_lib_bdd::Bdd
pub fn biodivine_pbn_control::control::PhenotypeControlMap::as_colored_vertices(&self) -> &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::control::PhenotypeControlMap::new(context: biodivine_pbn_control::perturbation::PerturbationGraph, perturbation_set: biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices) -> biodivine_pbn_control::control::PhenotypeControlMap
pub fn biodivine_pbn_control::control::PhenotypeControlMap::perturbation_working_colors(&self, perturbation: &std::collections::hash::map::HashMap<alloc::string::String, bool>) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColors
pub fn biodivine_pbn_control::control::PhenotypeControlMap::working_perturbations(&self, min_robustness: f64, verbose: bool, _return_only_smallest: bool) -> alloc::vec::Vec<(std::collections::hash::map::HashMap<alloc::string::String, bool>, biodivine_lib_param_bn::symbolic_async_graph::GraphColors)>
pub trait biodivine_pbn_control::control::ControlMap
pub fn biodivine_pbn_control::control::ControlMap::as_bdd(&self) -> &biodivine_lib_bdd::Bdd
pub fn biodivine_pbn_control::control::ControlMap::as_colored_vertices(&self) -> &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::control::ControlMap::new(context: biodivine_pbn_control::perturbation::PerturbationGraph, perturbation_set: biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices) -> Self
pub fn biodivine_pbn_control::control::ControlMap::perturbation_working_colors(&self, perturbation: &std::collections::hash::map::HashMap<alloc::string::String, bool>) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColors
pub fn biodivine_pbn_control::control::ControlMap::working_perturbations(&self, min_robustness: f64, verbose: bool, return_all: bool) -> alloc::vec::Vec<(std::collections::hash::map::HashMap<alloc::string::String, bool>, biodivine_lib_param_bn::symbolic_async_graph::GraphColors)>
impl biodivine_pbn_control::control::ControlMap for biodivine_pbn_control::control::AttractorControlMap
pub fn biodivine_pbn_control::control::AttractorControlMap::as_bdd(&self) -> &biodivine_lib_bdd::Bdd
pub fn biodivine_pbn_control::control::AttractorControlMap::as_colored_vertices(&self) -> &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::control::AttractorControlMap::new(context: biodivine_pbn_control::perturbation::PerturbationGraph, perturbation_set: biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices) -> Self
pub fn biodivine_pbn_control::control::AttractorControlMap::perturbation_working_colors(&self, perturbation: &std::collections::hash::map::HashMap<alloc::string::String, bool>) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColors
pub fn biodivine_pbn_control::control::AttractorControlMap::working_perturbations(&self, min_robustness: f64, _verbose: bool, return_all: bool) -> alloc::vec::Vec<(std::collections::hash::map::HashMap<alloc::string::String, bool>, biodivine_lib_param_bn::symbolic_async_graph::GraphColors)>
impl biodivine_pbn_control::control::ControlMap for biodivine_pbn_control::control::PhenotypeControlMap
pub fn biodivine_pbn_control::control::PhenotypeControlMap::as_bdd(&self) -> &biodivine_lib_bdd::Bdd
pub fn biodivine_pbn_control::control::PhenotypeControlMap::as_colored_vertices(&self) -> &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::control::PhenotypeControlMap::new(context: biodivine_pbn_control::perturbation::PerturbationGraph, perturbation_set: biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices) -> biodivine_pbn_control::control::PhenotypeControlMap
pub fn biodivine_pbn_control::control::PhenotypeControlMap::perturbation_working_colors(&self, perturbation: &std::collections::hash::map::HashMap<alloc::string::String, bool>) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColors
pub fn biodivine_pbn_control::control::PhenotypeControlMap::working_perturbations(&self, min_robustness: f64, verbose: bool, _return_only_smallest: bool) -> alloc::vec::Vec<(std::collections::hash::map::HashMap<alloc::string::String, bool>, biodivine_lib_param_bn::symbolic_async_graph::GraphColors)>
pub mod biodivine_pbn_control::experiment_utils
pub fn biodivine_pbn_control::experiment_utils::get_all_params_with_attractor(graph: &biodivine_pbn_control::perturbation::PerturbationGraph, state: &biodivine_lib_param_bn::biodivine_std::bitvector::ArrayBitVector) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColors
pub fn biodivine_pbn_control::experiment_utils::parse_experiment(file: &str) -> (biodivine_lib_param_bn::biodivine_std::bitvector::ArrayBitVector, biodivine_lib_param_bn::biodivine_std::bitvector::ArrayBitVector, biodivine_lib_param_bn::BooleanNetwork)
pub fn biodivine_pbn_control::experiment_utils::run_control_experiment<F>(source: biodivine_lib_param_bn::biodivine_std::bitvector::ArrayBitVector, target: biodivine_lib_param_bn::biodivine_std::bitvector::ArrayBitVector, model: biodivine_lib_param_bn::BooleanNetwork, control_function: F, control_type: &str) where F: core::ops::function::Fn(&biodivine_pbn_control::perturbation::PerturbationGraph, &biodivine_lib_param_bn::biodivine_std::bitvector::ArrayBitVector, &biodivine_lib_param_bn::biodivine_std::bitvector::ArrayBitVector, &biodivine_lib_param_bn::symbolic_async_graph::GraphColors, bool) -> biodivine_pbn_control::control::AttractorControlMap
pub fn biodivine_pbn_control::experiment_utils::string_to_state(string_vector: &str) -> biodivine_lib_param_bn::biodivine_std::bitvector::ArrayBitVector
pub mod biodivine_pbn_control::perturbation
pub struct biodivine_pbn_control::perturbation::PerturbationGraph
impl biodivine_pbn_control::perturbation::PerturbationGraph
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::as_non_perturbable(&self) -> &biodivine_lib_param_bn::symbolic_async_graph::SymbolicAsyncGraph
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::as_original(&self) -> &biodivine_lib_param_bn::symbolic_async_graph::SymbolicAsyncGraph
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::as_perturbed(&self) -> &biodivine_lib_param_bn::symbolic_async_graph::SymbolicAsyncGraph
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::as_symbolic_context(&self) -> &biodivine_lib_param_bn::symbolic_async_graph::SymbolicContext
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::build_colors_with_values(&self, bn: &biodivine_lib_param_bn::BooleanNetwork, values: std::collections::hash::map::HashMap<alloc::string::String, bool>) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColors
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::create_perturbation_colors(&self, perturbation_size: usize, verbose: bool) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColors
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::empty_colored_vertices(&self) -> &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::empty_colors(&self) -> &biodivine_lib_param_bn::symbolic_async_graph::GraphColors
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::fix_perturbation(&self, variable: biodivine_lib_param_bn::VariableId, value: core::option::Option<&bool>) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::fix_variable(&self, variable: biodivine_lib_param_bn::VariableId, value: bool) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::get_perturbation_parameter(&self, variable: biodivine_lib_param_bn::VariableId) -> core::option::Option<biodivine_lib_param_bn::ParameterId>
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::mk_empty_colored_vertices(&self) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::mk_empty_colors(&self) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColors
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::mk_unit_colored_vertices(&self) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::mk_unit_colors(&self) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColors
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::new(network: &biodivine_lib_param_bn::BooleanNetwork) -> biodivine_pbn_control::perturbation::PerturbationGraph
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::not_perturbed(&self, variable: biodivine_lib_param_bn::VariableId) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColors
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::num_perturbation_parameters(&self) -> usize
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::perturbable_variables(&self) -> &alloc::vec::Vec<biodivine_lib_param_bn::VariableId>
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::post_perturbation(&self, source: &biodivine_lib_param_bn::biodivine_std::bitvector::ArrayBitVector, target: &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::strong_basin(&self, target: &biodivine_lib_param_bn::biodivine_std::bitvector::ArrayBitVector) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::unit_colored_vertices(&self) -> &biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::unit_colors(&self) -> &biodivine_lib_param_bn::symbolic_async_graph::GraphColors
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::variables(&self) -> biodivine_lib_param_bn::VariableIdIterator
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::vertex(&self, state: &biodivine_lib_param_bn::biodivine_std::bitvector::ArrayBitVector) -> biodivine_lib_param_bn::symbolic_async_graph::GraphColoredVertices
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::with_restricted_variables(network: &biodivine_lib_param_bn::BooleanNetwork, perturb: alloc::vec::Vec<biodivine_lib_param_bn::VariableId>) -> biodivine_pbn_control::perturbation::PerturbationGraph
impl biodivine_pbn_control::perturbation::PerturbationGraph
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::ceiled_phenotype_permanent_control(&self, phenotype: biodivine_lib_param_bn::symbolic_async_graph::GraphVertices, size_bound: usize, allow_oscillation: biodivine_pbn_control::control::PhenotypeOscillationType, initial_states: biodivine_lib_param_bn::symbolic_async_graph::GraphVertices, stop_early: bool, verbose: bool) -> biodivine_pbn_control::control::PhenotypeControlMap
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::get_perturbation_bdd_mapping(&self, perturbation_variables: &[biodivine_lib_param_bn::VariableId]) -> std::collections::hash::map::HashMap<biodivine_lib_param_bn::VariableId, biodivine_lib_bdd::BddVariable>
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::get_perturbation_bdd_vars(perturbation_bbd_vars_mapping: &std::collections::hash::map::HashMap<biodivine_lib_param_bn::VariableId, biodivine_lib_bdd::BddVariable>) -> alloc::vec::Vec<biodivine_lib_bdd::BddVariable>
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::phenotype_permanent_control(&self, phenotype: biodivine_lib_param_bn::symbolic_async_graph::GraphVertices, oscillation: biodivine_pbn_control::control::PhenotypeOscillationType, initial_states: biodivine_lib_param_bn::symbolic_async_graph::GraphVertices, verbose: bool) -> biodivine_pbn_control::control::PhenotypeControlMap
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::phenotype_permanent_control_iterated<F, E>(&self, target_phenotype: &biodivine_lib_param_bn::symbolic_async_graph::GraphVertices, target_phenotype_oscillation: biodivine_pbn_control::control::PhenotypeOscillationType, admissible_perturbations: core::option::Option<&biodivine_lib_param_bn::symbolic_async_graph::GraphColors>, initial_states: biodivine_lib_param_bn::symbolic_async_graph::GraphVertices, minimum_robustness: core::option::Option<f64>, result_limit: core::option::Option<usize>, verbose: bool, is_cancelled: F) -> core::result::Result<alloc::vec::Vec<(std::collections::hash::map::HashMap<alloc::string::String, bool>, biodivine_lib_param_bn::symbolic_async_graph::GraphColors)>, E> where F: core::ops::function::Fn(&alloc::vec::Vec<(std::collections::hash::map::HashMap<alloc::string::String, bool>, biodivine_lib_param_bn::symbolic_async_graph::GraphColors)>) -> core::result::Result<(), E>
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::phenotype_permanent_control_of_specific_size(&self, phenotype: biodivine_lib_param_bn::symbolic_async_graph::GraphVertices, perturbation_size: usize, allow_oscillation: biodivine_pbn_control::control::PhenotypeOscillationType, initial_states: biodivine_lib_param_bn::symbolic_async_graph::GraphVertices, verbose: bool) -> biodivine_pbn_control::control::PhenotypeControlMap
impl biodivine_pbn_control::perturbation::PerturbationGraph
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::one_step_control(&self, source: &biodivine_lib_param_bn::biodivine_std::bitvector::ArrayBitVector, target: &biodivine_lib_param_bn::biodivine_std::bitvector::ArrayBitVector, compute_params: &biodivine_lib_param_bn::symbolic_async_graph::GraphColors, verbose: bool) -> biodivine_pbn_control::control::AttractorControlMap
impl biodivine_pbn_control::perturbation::PerturbationGraph
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::permanent_control(&self, source: &biodivine_lib_param_bn::biodivine_std::bitvector::ArrayBitVector, target: &biodivine_lib_param_bn::biodivine_std::bitvector::ArrayBitVector, compute_params: &biodivine_lib_param_bn::symbolic_async_graph::GraphColors, verbose: bool) -> biodivine_pbn_control::control::AttractorControlMap
impl biodivine_pbn_control::perturbation::PerturbationGraph
pub fn biodivine_pbn_control::perturbation::PerturbationGraph::temporary_control(&self, source: &biodivine_lib_param_bn::biodivine_std::bitvector::ArrayBitVector, target: &biodivine_lib_param_bn::biodivine_std::bitvector::ArrayBitVector, compute_params: &biodivine_lib_param_bn::symbolic_async_graph::GraphColors, verbose: bool) -> biodivine_pbn_control::control::AttractorControlMap
pub mod biodivine_pbn_control::tests
pub mod biodivine_pbn_control::tests::reduced_mapk_test
pub mod biodivine_pbn_control::tests::uncertain_mapk_dusp1_test
pub mod biodivine_pbn_control::tests::uncertain_mapk_frs2_test
pub mod biodivine_pbn_control::tests::uncertain_mapk_mek1_2_test

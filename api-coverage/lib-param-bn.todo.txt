pub struct biodivine_lib_param_bn::symbolic_async_graph::RegulationConstraint
impl biodivine_lib_param_bn::symbolic_async_graph::RegulationConstraint
pub fn biodivine_lib_param_bn::symbolic_async_graph::RegulationConstraint::fix_regulation(ctx: &biodivine_lib_param_bn::symbolic_async_graph::SymbolicContext, old_regulation: &biodivine_lib_param_bn::Regulation, fn_is_true: &biodivine_lib_bdd::Bdd) -> core::option::Option<biodivine_lib_param_bn::Regulation>
pub fn biodivine_lib_param_bn::symbolic_async_graph::RegulationConstraint::infer_sufficient_regulation(ctx: &biodivine_lib_param_bn::symbolic_async_graph::SymbolicContext, regulator: biodivine_lib_param_bn::VariableId, target: biodivine_lib_param_bn::VariableId, fn_is_true: &biodivine_lib_bdd::Bdd) -> core::option::Option<biodivine_lib_param_bn::Regulation>
pub fn biodivine_lib_param_bn::symbolic_async_graph::RegulationConstraint::mk_activation(ctx: &biodivine_lib_param_bn::symbolic_async_graph::SymbolicContext, fn_is_true: &biodivine_lib_bdd::Bdd, input: biodivine_lib_param_bn::VariableId) -> biodivine_lib_bdd::Bdd
pub fn biodivine_lib_param_bn::symbolic_async_graph::RegulationConstraint::mk_inhibition(ctx: &biodivine_lib_param_bn::symbolic_async_graph::SymbolicContext, fn_is_true: &biodivine_lib_bdd::Bdd, input: biodivine_lib_param_bn::VariableId) -> biodivine_lib_bdd::Bdd
pub fn biodivine_lib_param_bn::symbolic_async_graph::RegulationConstraint::mk_observability(ctx: &biodivine_lib_param_bn::symbolic_async_graph::SymbolicContext, fn_is_true: &biodivine_lib_bdd::Bdd, input: biodivine_lib_param_bn::VariableId) -> biodivine_lib_bdd::Bdd